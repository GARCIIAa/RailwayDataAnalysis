<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.rda.mapper.RailwayDataMapper">
    <resultMap id="BaseResult" type="org.rda.pojo.RailwayData">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		<id property="id" column="id" />
		<result property="productName" column="productName" />
		<result property="productId" column="productId" />
		<result property="fromCity" column="fromCity" />
		<result property="toCity" column="toCity" />
		<result property="isTotal" column="isTotal" />
		<result property="carNum" column="carNum" />
		<result property="tonnage" column="tonnage" />
		<result property="fromLongitude" column="fromLongitude" />
		<result property="fromLatitude" column="fromLatitude" />
		<result property="toLongitude" column="toLongitude" />
		<result property="toLatitude" column="toLatitude" />
		<result property="date" column="date" />
	</resultMap>
	
	<resultMap id="BaseResult1" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="fromCity" column="fromCity" />
		<result property="tonnage" column="ton" />
		<result property="fromLongitude" column="fromLongitude" />
		<result property="fromLatitude" column="fromLatitude" />
	</resultMap>
	
	 <resultMap id="BaseResult2" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="toCity" column="toCity" />
		<result property="tonnage" column="ton" />
		<result property="toLongitude" column="toLongitude" />
		<result property="toLatitude" column="toLatitude" />
	</resultMap>
	
	<resultMap id="BaseResult3" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="fromCity" column="fromCity" />
		<result property="tonnage" column="ton" />
		<result property="carNum" column="car" />
		<result property="date" column="date" />
		<result property="fromLongitude" column="fromLongitude" />
		<result property="fromLatitude" column="fromLatitude" />
	</resultMap>
	
	 <resultMap id="BaseResult4" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="toCity" column="toCity" />
		<result property="tonnage" column="ton" />
		<result property="carNum" column="car" />
		<result property="date" column="date" />
		<result property="toLongitude" column="toLongitude" />
		<result property="toLatitude" column="toLatitude" />
	</resultMap>
	<resultMap id="BaseResult5" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="productName" column="productName" />
		
		<result property="benifit" column="benifit" />
	</resultMap>
	
	
	<resultMap id="BaseResult20" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="fromCity" column="fromCity" />
		<result property="tonnage" column="tonnage" />
		<result property="carNum" column="carNum" />
		
		
	</resultMap>
	
	<resultMap id="BaseResult21" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="fromCity" column="fromCity" />
		<result property="productId" column="productId" />
		<result property="tonnage" column="tonnage" />
		<result property="carNum" column="carNum" />
		<result property="income" column="income" />
	</resultMap>
	
	<resultMap id="BaseResult22" type="java.util.Map">
		<!-- column:数据库中表的字段 
		property：数据库中表所有映射的实体类javaBean中的属性名 -->
		
		<result property="toCity" column="toCity" />
		<result property="productId" column="productId" />
		<result property="tonnage" column="tonnage" />
		<result property="carNum" column="carNum" />
		<result property="income" column="income" />
	</resultMap>
	
	<select id="getFilterResult"  resultType="org.rda.pojo.RailwayData">
	select * from railwaydata
	
	
	</select>
	
	<select id="getProductTonnage"  resultType="Float">
	select sum(tonnage) from railwaydata
	where productId like CONCAT(#{productId},'%') and subString(date,1,6) = #{date}
	
	</select>
	
	<select id="getProductTonnagebyTime" resultMap="BaseResult1">
    select fromCity,fromLongitude,fromLatitude,sum(tonnage) as ton from railwaydata 
	 where substring(date,1,6) between #{startmonth} and #{endmonth}
	 and productId like CONCAT(#{productId},'%') 
	 group by fromCity,fromLongitude,fromLatitude
	</select>

<select id="getProductTonnagebyTime2" resultMap="BaseResult2">
    select toCity,toLongitude,toLatitude,sum(tonnage) as ton from railwaydata 
	 where substring(date,1,6) between #{startmonth} and #{endmonth}
	 and productId like CONCAT(#{productId},'%') 
	 group by toCity,toLongitude,toLatitude
	</select>
<select id="getProductbyTime" resultMap="BaseResult3">
    select toCity,toLongitude,toLatitude,substring(date,1,6) as date,sum(tonnage) as ton,sum(carNum) as car from railwaydata 
	 where substring(date,1,6) between #{startmonth} and #{endmonth}
	 and productId like CONCAT(#{productId},'%') 
	 group by toCity,toLongitude,toLatitude,substring(date,1,6)
	</select>


<select id="getProductbyTime2" resultMap="BaseResult4">
    select toCity,toLongitude,toLatitude,substring(date,1,6) as date,sum(tonnage) as ton, sum(carNum) as car from railwaydata 
	 where substring(date,1,6) between #{startmonth} and #{endmonth}
	 and productId like CONCAT(#{productId},'%') 
	 group by toCity,toLongitude,toLatitude,substring(date,1,6)
	</select>
<select id="getBenifitbyTime" resultMap="BaseResult5">
    select productName,sum(tonnage)/sum(carNum) as benifit from railwaydata 
	 where substring(date,1,6) between #{startmonth} and #{endmonth}
	 and productId like CONCAT(#{productId},'%') 
	 group by productName
	 order by sum(tonnage)/sum(carNum) desc
     limit 5
</select>


<select id="getProvinceTonnage" resultMap="BaseResult20">
select province,sum(carNum) as carNum,sum(tonnage) as tonnage from railwaydata,province
where railwaydata.fromCity = province.city
or railwaydata.toCity = province.city
and productId like CONCAT(#{productId},'%') 
group by province
order by sum(tonnage) desc
     </select>
     
     <select id="getCityTonnage" resultMap="BaseResult21">
select fromCity,productId,sum(tonnage) as tonnage ,sum(carNum) as carNum,sum(income) as income from data_company
where toCity = #{toCity}
and productId like CONCAT(#{productId},'%') 
group by fromCity
order by sum(tonnage) desc
limit 20
     </select>

 <select id="getCityTonnage2" resultMap="BaseResult22">
select toCity,productId,sum(tonnage) as tonnage ,sum(carNum) as carNum,sum(income) as income from data_company
where fromCity = #{fromCity}
and productId like CONCAT(#{productId},'%') 
group by toCity
order by sum(tonnage) desc
limit 20
     </select>
	
</mapper>
	